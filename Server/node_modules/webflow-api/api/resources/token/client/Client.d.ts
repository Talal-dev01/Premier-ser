/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Webflow from "../../../index";
export declare namespace Token {
    interface Options {
        environment?: core.Supplier<environments.WebflowEnvironment | string>;
        accessToken: core.Supplier<core.BearerToken>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class Token {
    protected readonly _options: Token.Options;
    constructor(_options: Token.Options);
    /**
     * Information about the Authorized User
     *
     * Required Scope | `authorized_user:read`
     *
     * @param {Token.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.ForbiddenError}
     *
     * @example
     *     await client.token.authorizedBy()
     */
    authorizedBy(requestOptions?: Token.RequestOptions): Promise<Webflow.AuthorizedUser>;
    /**
     * Information about the authorization token
     *
     * <Note>Access to this endpoint requires a bearer token from a [Data Client App](/data/docs/getting-started-data-clients).</Note>
     *
     * @param {Token.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Webflow.UnauthorizedError}
     *
     * @example
     *     await client.token.introspect()
     */
    introspect(requestOptions?: Token.RequestOptions): Promise<Webflow.Authorization>;
    protected _getAuthorizationHeader(): Promise<string>;
}
